// <auto-generated />
using System;
using Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Data.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application.Data.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "/images/aap.jpg",
                            Name = "Aap",
                            Price = 25.0m,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 2,
                            Image = "/images/olifant.jpg",
                            Name = "Olifant",
                            Price = 100.0m,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 3,
                            Image = "/images/zebra.jpg",
                            Name = "Zebra",
                            Price = 50.0m,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 4,
                            Image = "/images/leeuw.jpg",
                            Name = "Leeuw",
                            Price = 150.0m,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 5,
                            Image = "/images/hond.jpg",
                            Name = "Hond",
                            Price = 20.0m,
                            Type = "Farm"
                        },
                        new
                        {
                            Id = 6,
                            Image = "/images/ezel.jpg",
                            Name = "Ezel",
                            Price = 30.0m,
                            Type = "Farm"
                        },
                        new
                        {
                            Id = 7,
                            Image = "/images/koe.jpg",
                            Name = "Koe",
                            Price = 50.0m,
                            Type = "Farm"
                        },
                        new
                        {
                            Id = 8,
                            Image = "/images/eend.jpg",
                            Name = "Eend",
                            Price = 15.0m,
                            Type = "Farm"
                        },
                        new
                        {
                            Id = 9,
                            Image = "/images/kuiken.jpg",
                            Name = "Kuiken",
                            Price = 10.0m,
                            Type = "Farm"
                        },
                        new
                        {
                            Id = 10,
                            Image = "/images/pinguin.jpg",
                            Name = "Pinguïn",
                            Price = 80.0m,
                            Type = "Snow"
                        },
                        new
                        {
                            Id = 11,
                            Image = "/images/ijsbeer.jpg",
                            Name = "IJsbeer",
                            Price = 200.0m,
                            Type = "Snow"
                        },
                        new
                        {
                            Id = 12,
                            Image = "/images/zeehond.jpg",
                            Name = "Zeehond",
                            Price = 60.0m,
                            Type = "Snow"
                        },
                        new
                        {
                            Id = 13,
                            Image = "/images/kameel.jpg",
                            Name = "Kameel",
                            Price = 70.0m,
                            Type = "Desert"
                        },
                        new
                        {
                            Id = 14,
                            Image = "/images/slang.jpg",
                            Name = "Slang",
                            Price = 40.0m,
                            Type = "Desert"
                        },
                        new
                        {
                            Id = 15,
                            Image = "/images/trex.jpg",
                            Name = "T-Rex",
                            Price = 500.0m,
                            Type = "Vip"
                        },
                        new
                        {
                            Id = 16,
                            Image = "/images/unicorn.jpg",
                            Name = "Unicorn",
                            Price = 1000.0m,
                            Type = "Vip"
                        });
                });

            modelBuilder.Entity("Application.Data.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bevestigd")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Totaalprijs")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KlantId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bevestigd = false,
                            Datum = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KlantId = 1,
                            Totaalprijs = 150.0m
                        });
                });

            modelBuilder.Entity("Application.Data.Models.BookingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            BookingId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 3,
                            BookingId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 7,
                            BookingId = 1
                        });
                });

            modelBuilder.Entity("Application.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerCardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Infix")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Straat 1, 1234 AB",
                            Email = "jan@example.com",
                            FirstName = "Jan",
                            LastName = "Jansen",
                            PhoneNumber = "0612345678"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Straat 2, 1234 CD",
                            CustomerCardType = "Silver",
                            Email = "pite@example.com",
                            FirstName = "Piet",
                            LastName = "Pietersen",
                            PhoneNumber = "0612345678"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Straat 3, 1234 EF",
                            CustomerCardType = "Gold",
                            Email = "karin@example.com",
                            FirstName = "Karin",
                            LastName = "Klaassen",
                            PhoneNumber = "0612345678"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Straat 4, 1234 GH",
                            CustomerCardType = "Platinum",
                            Email = "sophie@example.com",
                            FirstName = "Sophie",
                            Infix = "de",
                            LastName = "Groot",
                            PhoneNumber = "0612345678"
                        });
                });

            modelBuilder.Entity("Application.Data.Models.Booking", b =>
                {
                    b.HasOne("Application.Data.Models.User", "Klant")
                        .WithMany("Bookings")
                        .HasForeignKey("KlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klant");
                });

            modelBuilder.Entity("Application.Data.Models.BookingDetail", b =>
                {
                    b.HasOne("Application.Data.Models.Animal", "Animal")
                        .WithMany("BookingDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Application.Data.Models.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Application.Data.Models.Animal", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("Application.Data.Models.Booking", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("Application.Data.Models.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
